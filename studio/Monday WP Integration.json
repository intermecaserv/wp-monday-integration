{
    "description": "A New Flow",
    "states": [
        {
            "name": "Trigger",
            "type": "trigger",
            "transitions": [
                {
                    "next": "if_order_keyword",
                    "event": "incomingMessage"
                },
                {
                    "event": "incomingCall"
                },
                {
                    "next": "set_others_projects_false",
                    "event": "incomingRequest"
                },
                {
                    "event": "incomingParent"
                }
            ],
            "properties": {
                "offset": {
                    "x": 50,
                    "y": 80
                }
            }
        },
        {
            "name": "if_order_keyword",
            "type": "split-based-on",
            "transitions": [
                {
                    "event": "noMatch"
                },
                {
                    "next": "set_others_projects_false",
                    "event": "match",
                    "conditions": [
                        {
                            "friendly_name": "If value contains comenzi",
                            "arguments": [
                                "{{trigger.message.Body}}"
                            ],
                            "type": "contains",
                            "value": "comanda"
                        }
                    ]
                },
                {
                    "next": "set_others_projects_false",
                    "event": "match",
                    "conditions": [
                        {
                            "friendly_name": "If value contains comenzi",
                            "arguments": [
                                "{{trigger.message.Body}}"
                            ],
                            "type": "contains",
                            "value": "comenzi"
                        }
                    ]
                }
            ],
            "properties": {
                "input": "{{trigger.message.Body}}",
                "offset": {
                    "x": -560,
                    "y": 280
                }
            }
        },
        {
            "name": "func_get_welcome_message",
            "type": "run-function",
            "transitions": [
                {
                    "next": "send_wait_project_list",
                    "event": "success"
                },
                {
                    "next": "send_error",
                    "event": "fail"
                }
            ],
            "properties": {
                "service_sid": "ZS09cdc804a17d83dd03fdb7a77465db3e",
                "environment_sid": "ZE3efb2bf5c09471d6b5c1813030731341",
                "offset": {
                    "x": 90,
                    "y": 650
                },
                "function_sid": "ZH78c217ff068f8dc6bfc9120d958d16b1",
                "parameters": [
                    {
                        "value": "{{trigger.message.From}}",
                        "key": "phoneNo"
                    },
                    {
                        "value": "{{flow.variables.othersProjects}}",
                        "key": "othersProjects"
                    }
                ],
                "url": "https://intermecaserv-2016.twil.io/getWelcomeMessage"
            }
        },
        {
            "name": "send_error",
            "type": "send-message",
            "transitions": [
                {
                    "event": "sent"
                },
                {
                    "event": "failed"
                }
            ],
            "properties": {
                "offset": {
                    "x": 1320,
                    "y": 1090
                },
                "service": "{{trigger.message.InstanceSid}}",
                "channel": "{{trigger.message.ChannelSid}}",
                "from": "{{flow.channel.address}}",
                "to": "{{contact.channel.address}}",
                "body": "A aparut o eroare. Va rugam sa reveniti mai tarziu."
            }
        },
        {
            "name": "send_wait_project_list",
            "type": "send-and-wait-for-reply",
            "transitions": [
                {
                    "next": "func_validate_selected_project",
                    "event": "incomingMessage"
                },
                {
                    "next": "send_bye",
                    "event": "timeout"
                },
                {
                    "next": "send_error",
                    "event": "deliveryFailure"
                }
            ],
            "properties": {
                "offset": {
                    "x": 70,
                    "y": 1070
                },
                "service": "{{trigger.message.InstanceSid}}",
                "channel": "{{trigger.message.ChannelSid}}",
                "from": "{{flow.channel.address}}",
                "body": "{{widgets.func_get_welcome_message.parsed.text}}",
                "timeout": "300"
            }
        },
        {
            "name": "send_bye",
            "type": "send-message",
            "transitions": [
                {
                    "event": "sent"
                },
                {
                    "next": "send_error",
                    "event": "failed"
                }
            ],
            "properties": {
                "offset": {
                    "x": 880,
                    "y": 680
                },
                "service": "{{trigger.message.InstanceSid}}",
                "channel": "{{trigger.message.ChannelSid}}",
                "from": "{{flow.channel.address}}",
                "to": "{{contact.channel.address}}",
                "body": "La revedere."
            }
        },
        {
            "name": "func_validate_selected_project",
            "type": "run-function",
            "transitions": [
                {
                    "next": "if_others_selected",
                    "event": "success"
                },
                {
                    "next": "send_invalid_project",
                    "event": "fail"
                }
            ],
            "properties": {
                "service_sid": "ZS09cdc804a17d83dd03fdb7a77465db3e",
                "environment_sid": "ZE3efb2bf5c09471d6b5c1813030731341",
                "offset": {
                    "x": 20,
                    "y": 1410
                },
                "function_sid": "ZH76a2a7d2ee4e47a3c58f376327559477",
                "parameters": [
                    {
                        "value": "{{widgets.send_wait_project_list.inbound.Body}}",
                        "key": "selectedIndex"
                    }
                ],
                "url": "https://intermecaserv-2016.twil.io/validateSelectedProject"
            }
        },
        {
            "name": "send_invalid_project",
            "type": "send-message",
            "transitions": [
                {
                    "next": "send_wait_project_list",
                    "event": "sent"
                },
                {
                    "next": "send_error",
                    "event": "failed"
                }
            ],
            "properties": {
                "offset": {
                    "x": 780,
                    "y": 1680
                },
                "service": "{{trigger.message.InstanceSid}}",
                "channel": "{{trigger.message.ChannelSid}}",
                "from": "{{flow.channel.address}}",
                "to": "{{contact.channel.address}}",
                "body": "Numar proiect invalid. Reincercati."
            }
        },
        {
            "name": "set_others_projects_false",
            "type": "set-variables",
            "transitions": [
                {
                    "next": "func_get_welcome_message",
                    "event": "next"
                }
            ],
            "properties": {
                "variables": [
                    {
                        "value": "{{nil}}",
                        "key": "othersProjects"
                    }
                ],
                "offset": {
                    "x": 280,
                    "y": 390
                }
            }
        },
        {
            "name": "if_others_selected",
            "type": "split-based-on",
            "transitions": [
                {
                    "next": "send_invalid_project",
                    "event": "noMatch"
                },
                {
                    "next": "send_wait_order_body",
                    "event": "match",
                    "conditions": [
                        {
                            "friendly_name": "If value equal_to ok",
                            "arguments": [
                                "{{widgets.func_validate_selected_project.parsed.result}}"
                            ],
                            "type": "equal_to",
                            "value": "ok"
                        }
                    ]
                },
                {
                    "next": "if_others_projects_true",
                    "event": "match",
                    "conditions": [
                        {
                            "friendly_name": "If value equal_to others",
                            "arguments": [
                                "{{widgets.func_validate_selected_project.parsed.result}}"
                            ],
                            "type": "equal_to",
                            "value": "others"
                        }
                    ]
                }
            ],
            "properties": {
                "input": "{{widgets.func_validate_selected_project.parsed.result}}",
                "offset": {
                    "x": -70,
                    "y": 1780
                }
            }
        },
        {
            "name": "set_others_projects_true_2",
            "type": "set-variables",
            "transitions": [
                {
                    "next": "func_get_welcome_message",
                    "event": "next"
                }
            ],
            "properties": {
                "variables": [
                    {
                        "value": "{{true}}",
                        "key": "othersProjects"
                    }
                ],
                "offset": {
                    "x": 370,
                    "y": 2400
                }
            }
        },
        {
            "name": "if_others_projects_true",
            "type": "split-based-on",
            "transitions": [
                {
                    "event": "noMatch"
                },
                {
                    "next": "set_others_projects_false_2",
                    "event": "match",
                    "conditions": [
                        {
                            "friendly_name": "If value equal_to {{true}}",
                            "arguments": [
                                "{{flow.variables.othersProjects}}"
                            ],
                            "type": "is_not_blank",
                            "value": "Is Not Blank"
                        }
                    ]
                },
                {
                    "next": "set_others_projects_true_2",
                    "event": "match",
                    "conditions": [
                        {
                            "friendly_name": "{{flow.variables.othersProjects}}",
                            "arguments": [
                                "{{flow.variables.othersProjects}}"
                            ],
                            "type": "is_blank",
                            "value": "Is Blank"
                        }
                    ]
                }
            ],
            "properties": {
                "input": "{{flow.variables.othersProjects}}",
                "offset": {
                    "x": 20,
                    "y": 2110
                }
            }
        },
        {
            "name": "set_others_projects_false_2",
            "type": "set-variables",
            "transitions": [
                {
                    "next": "func_get_welcome_message",
                    "event": "next"
                }
            ],
            "properties": {
                "variables": [
                    {
                        "value": "{{nil}}",
                        "key": "othersProjects"
                    }
                ],
                "offset": {
                    "x": -30,
                    "y": 2400
                }
            }
        },
        {
            "name": "send_wait_order_body",
            "type": "send-and-wait-for-reply",
            "transitions": [
                {
                    "next": "send_thanks",
                    "event": "incomingMessage"
                },
                {
                    "next": "send_bye",
                    "event": "timeout"
                },
                {
                    "next": "send_error",
                    "event": "deliveryFailure"
                }
            ],
            "properties": {
                "offset": {
                    "x": -750,
                    "y": 1880
                },
                "service": "{{trigger.message.InstanceSid}}",
                "channel": "{{trigger.message.ChannelSid}}",
                "from": "{{flow.channel.address}}",
                "body": "Ati selectat proiectul {{widgets.func_validate_selected_project.parsed.projectName}} . Urmatorul mesaj va fi inregistrat ca si comanda.",
                "timeout": "300"
            }
        },
        {
            "name": "send_thanks",
            "type": "send-message",
            "transitions": [
                {
                    "event": "sent"
                },
                {
                    "event": "failed"
                }
            ],
            "properties": {
                "offset": {
                    "x": -998,
                    "y": 2198
                },
                "service": "{{trigger.message.InstanceSid}}",
                "channel": "{{trigger.message.ChannelSid}}",
                "from": "{{flow.channel.address}}",
                "to": "{{contact.channel.address}}",
                "body": "Got it, thanks"
            }
        }
    ],
    "initial_state": "Trigger",
    "flags": {
        "allow_concurrent_calls": true
    }
}